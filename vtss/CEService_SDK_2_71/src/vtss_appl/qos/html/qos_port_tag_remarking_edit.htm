<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
 
 Vitesse Switch Software.
 
 Copyright (c) 2002-2013 Vitesse Semiconductor Corporation "Vitesse". All
 Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted. Permission to
 integrate into other products, disclose, transmit and distribute the software
 in an absolute machine readable format (e.g. HEX file) is also granted.  The
 source code of the software may not be disclosed, transmitted or distributed
 without the written permission of Vitesse. The software and its source code
 may only be used in products utilizing the Vitesse switch products.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software. Vitesse retains all ownership,
 copyright, trade secret and proprietary rights in the software.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS," WITHOUT EXPRESS OR IMPLIED WARRANTY
 INCLUDING, WITHOUT LIMITATION, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
 FOR A PARTICULAR USE AND NON-INFRINGEMENT.
 
-->
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>QoS Egress Port Scheduler and Shaper Configuration</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/mootools-core.js"></script>
 <script type="text/javascript" src="lib/MasterControl.js"></script>
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/spom.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript" src="lib/validate.js"></script>
 <script type="text/javascript">

// Help page magic
var help_page = "/help/help_qos_port_tag_remarking_edit.htm";

var oTPCP  = genArrayStr(0, 7);
var oVPCP  = genArrayInt(0, 7);
var oTDEI  = genArrayStr(0, 1);
var oVDEI  = genArrayInt(0, 1);

var selectedPort = configPortMin; // The default selected port
var pageArgs = searchArgs(window.location.search);
if (pageArgs.port) {
    selectedPort = parseInt(pageArgs.port, 10);
}

function contentShowHide(sel)
{
    switch (parseInt(sel.value, 10)) {
    case 1:
            SetVisible("div_pcp_dei", 1);
            SetVisible("div_map", 0);
            break;
    case 2:
            SetVisible("div_pcp_dei", 0);
            SetVisible("div_map", 1);
            break;
    default:
            SetVisible("div_pcp_dei", 0);
            SetVisible("div_map", 0);
            break;
    }
}

function addDefaultPcpDei(config)
{
    var default_values = config.split("|");
    if (default_values.length != 2) {
        alert("Invalid 'default_values' parameter length. Expected 2, got " + default_values.length);
    }
    else {
        var tr;
        var fld;
        var frag = document.createDocumentFragment();
        tr = document.createElement("tr");
        addLabelTextCell(tr, "Default PCP", "param_label", "default_pcp");
        fld = addSelectCell(tr, oTPCP, oVPCP, parseInt(default_values[0], 10), "c", "default_pcp");
        fld.style.cssText = "width: 4em"; // IE likes this better than the setAttribute("style", "width: 4em") method. FF doesn't care which method is used.
        frag.appendChild(tr);

        tr = document.createElement("tr");
        addLabelTextCell(tr, "Default DEI", "param_label", "default_dei");
        fld = addSelectCell(tr, oTDEI, oVDEI, parseInt(default_values[1], 10), "c", "default_dei");
        fld.style.cssText = "width: 4em";
        frag.appendChild(tr);

        var tbody = document.getElementById("default_pcp_dei_tbody");
        clearChildNodes(tbody);
        tbody.appendChild(frag);
    }
}

function addMap(config)
{
    var map_values = config.split("/");
    if (map_values.length != 16) {
        alert("Invalid 'map_values' parameter length. Expected 16, got " + map_values.length);
    }
    else {
        var tr;
        var fld;
        var frag = document.createDocumentFragment();
        tr = document.createElement("tr");
        addTextHeaderCell(tr, "QoS class", "cl");
        addTextHeaderCell(tr, "DP level", "cl");
        addTextHeaderCell(tr, "PCP", "cl");
        addTextHeaderCell(tr, "DEI", "cl");
        frag.appendChild(tr);
        var thead = document.getElementById("map_thead");
        clearChildNodes(thead);
        thead.appendChild(frag);

        frag = document.createDocumentFragment();
        for (var i = 0; i < 16; i++) {
            var pcp_dei = map_values[i].split("|");
            tr = CreateStyledElement("tr", i % 2 ? "config_odd" : "config_even");
            addTextCell(tr, Math.floor(i/2), "cl");
            addTextCell(tr, i%2, "cl");
            fld = addSelectCell(tr, oTPCP, oVPCP, parseInt(pcp_dei[0], 10), "c", "pcp_" + i);
            fld.style.cssText = "width: 4em";
            fld = addSelectCell(tr, oTDEI, oVDEI, parseInt(pcp_dei[1], 10), "c", "dei_" + i);
            fld.style.cssText = "width: 4em";
            frag.appendChild(tr);
        }
        var tbody = document.getElementById("map_tbody");
        clearChildNodes(tbody);
        tbody.appendChild(frag);
        var cBar = new MasterControlBar([{text: "*", className: "cl"},
                                         {text: "*", className: "cl"},
                                         {name: "pcp_"},
                                         {name: "dei_"}]);
        cBar.construct('map_tbody');
    }
}

/* Format:
 * <port_no>#<mode>#<default_params>#<map>
 *
 * port_no          :== 1..max
 * mode             :== 0..2       // 0: Classified, 1: Default, 2: Mapped
 * default_params   :== <pcp|dei>
 *   pcp            :== 0..7
 *   dei            :== 0..1
 * map              :== <entry_0>/<entry_1>/...<entry_n> // n is 15.
 *   entry_x        :== <pcp|dei>
 *     pcp          :== 0..7
 *     dei          :== 0..1
 *
 * The map is organized as follows:
 * Entry corresponds to QoS class, DP level
 *  0                   0          0
 *  1                   0          1
 *  2                   1          0
 *  3                   1          1
 *  4                   2          0
 *  5                   2          1
 *  6                   3          0
 *  7                   3          1
 *  8                   4          0
 *  9                   4          1
 * 10                   5          0
 * 11                   5          1
 * 12                   6          0
 * 13                   6          1
 * 14                   7          0
 * 15                   7          1
 */

function processUpdate(req, ref)
{
    if (redirectOnError(req)) {
        return;
    }

    if (req.responseText) {
        var cfg = req.responseText.split("#");
        var port_no = parseInt(cfg[0], 10);
        UpdateIdSetSelect("tr_mode", parseInt(cfg[1], 10));
        addDefaultPcpDei(cfg[2]);
        addMap(cfg[3]);
        contentShowHide(document.getElementById("tr_mode"));
        UpdateIdValue('submit_port', port_no);
        UpdateId("display_port", configPortName(port_no, 1));
    } else {
        SpomHandleError();
    }
}

function requestUpdate() {
    if (SpomNavigationLoading()) {
        return;                 // Bail out, navigation will trigger update
    }
    loadXMLDoc(SpomAddSidArg("/config/qos_port_tag_remarking_edit?port=" + selectedPort), processUpdate);
    SpomUpdateDisplaySid("display_sid");
    SpomUpdateFormSid("submit_sid");
}

function PortSelect(sel)
{
    selectedPort = sel.options[sel.selectedIndex].value; 
    requestUpdate();
}

function checkForm()
{
    return true;
}

function resetForm(form)
{
    form.reset();
    contentShowHide(document.getElementById("tr_mode"));
}

function tagRemarkingModeChange(sel)
{
    contentShowHide(sel);
}

function SpomSidSelectorUpdate(sid)
{
    SpomSetCurrentSid(sid);     // Save current SID
    selectedPort = SpomUpdatePortSelector("portselect", selectedPort);
    requestUpdate();            // Update page to reflect selector
}

function docLoad()
{
    selectedPort = SpomUpdatePortSelector("portselect", selectedPort);
    requestUpdate();
}

function goBack()
{
    document.location.href = "qos_port_tag_remarking.htm";
}

 </script>
</head>

<body class="content" onload="docLoad();">

<div class="refreshbar">
 <form action="#">
  <select id="portselect" onchange="PortSelect(this);">
    <option value="1">Port 1</option>
    <option value="99">Port 99</option>
   </select>
 </form>
</div>

<form id="qos_port_tag_remarking_edit" method="POST" onsubmit="return checkForm();" action="/config/qos_port_tag_remarking_edit">

<h1>QoS Egress Port Tag Remarking <span id="display_sid"></span><span>&nbsp;</span><span id="display_port"></span></h1>

<table summary="Tag Remarking Mode Configuration" class="config">
 <tbody>
  <tr class="config">
   <td class="param_label"><label for="tr_mode">Tag Remarking Mode</label></td>
   <td>
    <select onchange="tagRemarkingModeChange(this);" name="tr_mode" id="tr_mode">
     <option value="0">Classified</option>
     <option value="1">Default</option>
     <option value="2">Mapped</option>
    </select>
   </td>
  </tr>
 </tbody>
</table>

<div id="div_pcp_dei" style="display:none;">
<h2>PCP/DEI Configuration</h2>
<table summary="PCP/DEI Configuration" class="config">
 <tbody id="default_pcp_dei_tbody">
 </tbody>
</table>
</div>

<div id="div_map" style="display:none;">
<h2>(QoS class, DP level) to (PCP, DEI) Mapping</h2>
<table summary="(QoS class, DP level) to (PCP, DEI) Mapping" class="config">
 <thead id="map_thead">
 </thead>
 <tbody id="map_tbody">
 </tbody>
</table>
</div>

<p>
 <input type="hidden" id="submit_sid" name="sid">    
 <input type="hidden" id="submit_port" name="port">
 <input type="submit" value="Save">
 <input type="button" value="Reset" onclick="resetForm(this.form);">
 <input type="button" value="Cancel" onclick="goBack();">
</p>

</form>

</body>
</html>


<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
