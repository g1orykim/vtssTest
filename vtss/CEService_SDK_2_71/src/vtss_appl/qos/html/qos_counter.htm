<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Vitesse Switch Software.

 Copyright (c) 2002-2013 Vitesse Semiconductor Corporation "Vitesse". All
 Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted. Permission to
 integrate into other products, disclose, transmit and distribute the software
 in an absolute machine readable format (e.g. HEX file) is also granted.  The
 source code of the software may not be disclosed, transmitted or distributed
 without the written permission of Vitesse. The software and its source code
 may only be used in products utilizing the Vitesse switch products.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software. Vitesse retains all ownership,
 copyright, trade secret and proprietary rights in the software.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS," WITHOUT EXPRESS OR IMPLIED WARRANTY
 INCLUDING, WITHOUT LIMITATION, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
 FOR A PARTICULAR USE AND NON-INFRINGEMENT.

-->
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>Port Status</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/spom.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript">

var timerID;

// Help page macic
var help_page = "/help/help_qos_counter.htm";

function addRow(index, frag, values) {
    var tr = CreateStyledElement("tr", index % 2 ? "display_odd" : "display_even");
    var txt;

    for(var i = 0; i < values.length; i++) {
        var td = CreateStyledElement("td", "cr");
        if(i === 0) {
            var portno = parseInt(values[i], 10);
            txt = document.createTextNode(configPortName(portno, 0));
            var link = document.createElement("a");
            link.href = "stat_detailed.htm?port=" + portno;
            link.appendChild(txt); // Add Text
            td.appendChild(link); // Add link to cell
	    tr.appendChild(td);         // Add cell to row
        } else {
            txt = document.createTextNode(values[i]);
            td.appendChild(txt); // Add text to cell
	    tr.appendChild(td);         // Add cell to row
        }

    }
    frag.appendChild(tr);       // Add row to fragment
}

function processUpdate(req, ref)
{
    // Format: 1/0/2/0/128/0/0/0/0|2/175/19/23597/3518/0/0/0/0|...
    if(req.responseText)  {
        var values = req.responseText.split("|");
        var frag = document.createDocumentFragment();
        for(var i = 0; i < values.length; i++) {
            if(values[i].length) {
                var pval = values[i].split("/");
                addRow(i, frag, pval);
            }
        }
        addFragment(frag, ref, 1);
        var autorefresh = document.getElementById('autorefresh');
        if(autorefresh.checked) {
            if(timerID) {
                clearTimeout(timerID);
            }
            timerID = setTimeout('requestUpdate()', settingsRefreshInterval());
        }
    } else {
        SpomHandleError();
    }
    document.getElementById("update").style.visibility = "hidden";
}

function requestUpdate() {
    /*
    Format: [port_no]/[low_queue_receive]/[normal_queue_transmit]/[normal_queue_receive]/[low_queue_transmit]/[medium_queue_receive]/[medium_queue_transmit]/[high_queue_receive]/[high_queue_transmit]|[port_no]/[low_queue_receive]/[normal_queue_transmit]/[normal_queue_receive]/[low_queue_transmit]/[medium_queue_receive]/[medium_queue_transmit]/[high_queue_receive]/[high_queue_transmit]|...
    */
    document.getElementById("update").style.visibility = "visible";
    if(SpomNavigationLoading()) {
        return;                 // Bail out, navigation will trigger update
    }
    loadXMLDoc(SpomAddSidArg("/stat/qos_counter"), processUpdate, 'portData');
    SpomUpdateDisplaySid("sid_display");
}

function requestClear() {
    document.getElementById("update").style.visibility = "visible";
    loadXMLDoc(SpomAddSidArg("/stat/qos_counter?clear=1"), processUpdate, 'portData');
}

function chkRefresh(fld)
{
    if(!fld.checked) {
        if(timerID) {
            clearTimeout(timerID);
        }
        timerID = null;
    } else {
        requestUpdate();
    }
}

function SpomSidSelectorUpdate(sid)
{
    SpomSetCurrentSid(sid);     // Save current SID
    requestUpdate();            // Update page to reflect selector
}

function docLoad()
{
    var frag = document.createDocumentFragment();
    var tr;
    var i;
    tr = document.createElement("tr");
    elem = addTextHeaderCell(tr, "Port", "hdrc");
    elem.setAttribute("rowSpan", "2");
    for (i = 0; i < configQosClassMax; i++) {
        addTextHeaderCell(tr, "Q" + i,    "hdrc", 2);
    }
    frag.appendChild(tr);

    tr = document.createElement("tr");
    for (i = 0; i < configQosClassMax; i++) {
        addTextHeaderCell(tr, "Rx",    "hdrc");
        addTextHeaderCell(tr, "Tx", "hdrc");
    }
    frag.appendChild(tr);
    addFragment(frag, "portHeader", 1);

    requestUpdate();
}
 </script>
</head>

<body class="content" onload="docLoad();">

<h1>Queuing Counters <span id="sid_display"></span></h1>

<div class="refreshbar">
 <form action="#">
  <label for="autorefresh">Auto-refresh</label>
  <input type="checkbox" name="autorefresh" id="autorefresh" onclick="chkRefresh(this);">
  <input type="button" value="Refresh" onclick="requestUpdate(); this.blur();">
  <input type="button" value="Clear"   onclick="requestClear();  this.blur();">
  <img id="update" alt="" src="images/updating.gif">
 </form>
</div>

<table id="portStats" summary="QoS Statistics" class="display">
 <thead id="portHeader">
 </thead>
 <tbody id="portData">
 </tbody>
</table>

</body>
</html>


<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
