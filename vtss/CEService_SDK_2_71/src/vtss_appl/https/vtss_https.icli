//
// Vitesse Switch Software.
//
# Copyright (c) 2002-2013 Vitesse Semiconductor Corporation "Vitesse". All
# Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted. Permission to
# integrate into other products, disclose, transmit and distribute the software
# in an absolute machine readable format (e.g. HEX file) is also granted.  The
# source code of the software may not be disclosed, transmitted or distributed
# without the written permission of Vitesse. The software and its source code
# may only be used in products utilizing the Vitesse switch products.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software. Vitesse retains all ownership,
# copyright, trade secret and proprietary rights in the software.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS," WITHOUT EXPRESS OR IMPLIED WARRANTY
# INCLUDING, WITHOUT LIMITATION, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR USE AND NON-INFRINGEMENT.
//
//
// Module Segment
//   This tag value is used to decide whether all commands of this module are
//   registered or not and the generated C/H file is compiled or not.
//
MODULE_IF_FLAG = defined(VTSS_SW_OPTION_HTTPS)

//
// Include Segment
//   The segment contains the include files. These include files are needed
//   for the code body, that is, all other segments.
//   "icli_api.h" is the default include file that will be auto-generated
//   in C file.
//   The content will be exactly pasted to the generated C file.
//
INCLUDE_BEGIN
#include "icli_porting_util.h"
#include "vtss_https_api.h"
INCLUDE_END

//
// Function Segment
//   The segment allows the designer writes the local functions that will be
//   used in the command Segment and also the global functions that can be
//   shared with other C files.
//   The content will be exactly pasted to the generated C file.
//
FUNCTION_BEGIN

#define VTSS_ALLOC_MODULE_ID VTSS_MODULE_ID_HTTPS

static i32 VTSS_HTTPS_ICLI_global_mode_set(u32 session_id, BOOL mode)
{
    https_conf_t    *conf;
    BOOL            original_mode;

    if ((conf = VTSS_MALLOC(sizeof(https_conf_t))) == NULL) {
        ICLI_PRINTF("%% Failed to alloc dymaic memory for HTTPS configuration.\n");
        return ICLI_RC_ERROR;
    }

    //get global configuration
    if (https_mgmt_conf_get(conf) != VTSS_OK) {
        ICLI_PRINTF("%% Failed to get HTTPS configuration.\n");
        VTSS_FREE(conf);
        return ICLI_RC_ERROR;
    }

    //set global configuration
    original_mode = conf->mode;
    conf->mode = mode;
    if (mode != original_mode && https_mgmt_conf_set(conf) != VTSS_OK) {
        ICLI_PRINTF("%% Failed to set HTTPS configuration.\n");
        VTSS_FREE(conf);
        return ICLI_RC_ERROR;
    }

    VTSS_FREE(conf);

    return ICLI_RC_OK;
}

static i32 VTSS_HTTPS_ICLI_redirect_mode_set(u32 session_id, BOOL mode)
{
    https_conf_t    *conf;
    BOOL            original_mode;

    if ((conf = VTSS_MALLOC(sizeof(https_conf_t))) == NULL) {
        ICLI_PRINTF("%% Failed to alloc dymaic memory for HTTPS configuration.\n");
        return ICLI_RC_ERROR;
    }

    //get global configuration
    if (https_mgmt_conf_get(conf) != VTSS_OK) {
        ICLI_PRINTF("%% Failed to get HTTPS configuration.\n");
        VTSS_FREE(conf);
        return ICLI_RC_ERROR;
    }

    // Essential condition check
    if (mode && !conf->mode) {
        ICLI_PRINTF("Can not enable the secure HTTP web redirection when the secure HTTP web server is disabled.\n");
        VTSS_FREE(conf);
        return ICLI_RC_ERROR;
    }

    //set global configuration
    original_mode = conf->redirect;
    conf->redirect = mode;
    if (mode != original_mode && https_mgmt_conf_set(conf) != VTSS_OK) {
        ICLI_PRINTF("%% Failed to set HTTPS configuration.\n");
        VTSS_FREE(conf);
        return ICLI_RC_ERROR;
    }

    VTSS_FREE(conf);

    return ICLI_RC_OK;
}
FUNCTION_END

//
// Export Segment
//   This segment contains the API declarations of the global functions in
//   Function Segment. This will be pasted exactly to the generated H file.
//   So, others can include the H file to use the global functions.
//
EXPORT_BEGIN
EXPORT_END

HELP_SERVER             = HTTP web server
HELP_SECURE             = Secure
HELP_SECURE_SERVER      = Secure HTTP web server
HELP_SECURE_REDIRECT    = Secure HTTP web redirection

CMD_BEGIN
COMMAND         = show ip http server secure status
# /* ---------------------------------------------------------------------------
DOC_CMD_DESC    = Use the show ip http server secure status privileged EXEC \
                  command to display the secure HTTP web server status.
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   = Use this command to show status information about the secure HTTP web server.
DOC_CMD_EXAMPLE = This is an example of output from the show ip http server secure status command:
DOC_CMD_EXAMPLE = Switch# show ip http server secure status
DOC_CMD_EXAMPLE = Switch secure HTTP web server is enabled
DOC_CMD_EXAMPLE = Switch secure HTTP web redirection is enabled
# ----------------------------------------------------------------------------*/

FUNC_NAME = icli_https_status
PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE  = ICLI_CMD_MODE_EXEC

// (Optional)
// C variable for the variable in the mode entry command
// It is needed when CMD_MODE: ICLI_CMD_MODE_CONFIG_VLAN,
//                             ICLI_CMD_MODE_INTERFACE_PORT_LIST,
//                             ICLI_CMD_MODE_INTERFACE_VLAN
// MODE_VAR  =


// (Optional)
// Name of reused execution function of another command
// FUNC_REUSE =

// (Optional)
// Property of the command, ICLI_CMD_PROP_XXXX, defined in icli_types.h.
// Acceptable use | to combine them.
// PROPERTY  =

// (Optional)
// This is for #if conditional flag to enclose the command.
// IF_FLAG   =

// (Optional)
// The no form of this command
// The C code need enclosed by [NO_FORM_CODE_BEGIN, NO_FORM_CODE_END]
//NO_FORM_DOC_CMD_DESC    =
//NO_FORM_DOC_CMD_DEFAULT =
//NO_FORM_DOC_CMD_USAGE   =
//NO_FORM_DOC_CMD_EXAMPLE =
//NO_FORM_DOC_CMD_EXAMPLE =
//NO_FORM_DOC_CMD_EXAMPLE =

// (Optional)
// Declare the variable name that one-to-one mapping to each word of command string (COMMAND)
// To get the variable type, please refer to AN1047-ICLI_Command_Generation_Guide.doc Appendix A: Variable Types
// or \vtss_appl\icli\doc\variable_type.txt
// The variable type is declared in \vtss_appl\icli\base\icli_types.h
CMD_VAR   =
CMD_VAR   =
CMD_VAR   =
CMD_VAR   =
CMD_VAR   =
CMD_VAR   =

// (Optional)
// Declare the static local sub-function that one-to-one mapping to each word of command string (COMMAND)
// The function is used for runtime callback check on the corresponding word of command string
// RUNTIME   =

// (Optional)
// If there isn't exact matched definition in CCLI variable types (ccli_variable.c/g_variable_name[])
// Given an alternative word that one-to-one mapping to each word of command string (COMMAND)
// BYWORD    =

HELP = ##ICLI_HELP_SHOW
HELP = ##ICLI_HELP_IP
HELP = ##ICLI_HELP_HTTP
HELP = ##HELP_SERVER
HELP = ##HELP_SECURE
HELP = ##ICLI_HELP_STATUS

VARIABLE_BEGIN
    https_conf_t *conf;
VARIABLE_END

CODE_BEGIN
    if ((conf = VTSS_MALLOC(sizeof(https_conf_t))) == NULL) {
        ICLI_PRINTF("%% Failed to alloc dymaic memory for HTTPS configuration.\n");
        return ICLI_RC_ERROR;
    }

    if (https_mgmt_conf_get(conf) != VTSS_OK) {
        ICLI_PRINTF("%% Failed to get HTTPS configuration.\n");
        VTSS_FREE(conf);
        return ICLI_RC_ERROR;
    }

    ICLI_PRINTF("Switch secure HTTP web server is %s\n", icli_bool_txt(conf->mode));
    ICLI_PRINTF("Switch secure HTTP web redirection is %s\n", icli_bool_txt(conf->redirect));

    VTSS_FREE(conf);
CODE_END

// (Optional)
// The no form of this command
// NO_FORM_CODE_BEGIN
// NO_FORM_CODE_END
CMD_END

CMD_BEGIN
COMMAND         = ip http secure-server
# /* ---------------------------------------------------------------------------
DOC_CMD_DESC    = Use the ip http secure-server global configuration command to \
                  enable the secure HTTP web server. Use the no form of this \
                  command to disable the secure HTTP web server.
DOC_CMD_DEFAULT = The secure HTTP web server is disabled.
DOC_CMD_USAGE   = Enable the secure HTTP web server.
DOC_CMD_EXAMPLE = This example shows how to enable the secure HTTP web server:
DOC_CMD_EXAMPLE = Switch(config)# ip http secure-server
DOC_CMD_EXAMPLE = You can verify your settings by entering the show ip http server secure status privileged EXEC command.
# ----------------------------------------------------------------------------*/

FUNC_NAME = icli_https_mode
PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE  = ICLI_CMD_MODE_GLOBAL_CONFIG

// (Optional)
// C variable for the variable in the mode entry command
// It is needed when CMD_MODE: ICLI_CMD_MODE_CONFIG_VLAN,
//                             ICLI_CMD_MODE_INTERFACE_PORT_LIST,
//                             ICLI_CMD_MODE_INTERFACE_VLAN
// MODE_VAR  =

// (Optional)
// Name of reused execution function of another command
// FUNC_REUSE =

// (Optional)
// Property of the command, ICLI_CMD_PROP_XXXX, defined in icli_types.h.
// Acceptable use | to combine them.
// PROPERTY  =

// (Optional)
// This is for #if conditional flag to enclose the command.
// IF_FLAG   =

// (Optional)
// The no form of this command
// The C code need enclosed by [NO_FORM_CODE_BEGIN, NO_FORM_CODE_END]
NO_FORM_DOC_CMD_DESC    = Use the no ip http secure-server global configuration command to \
                          disable the secure HTTP web server.
NO_FORM_DOC_CMD_DEFAULT = The secure HTTP web server is disabled.
NO_FORM_DOC_CMD_USAGE   = Disable the secure HTTP web server.
NO_FORM_DOC_CMD_EXAMPLE = This example shows how to disable the secure HTTP web server:
NO_FORM_DOC_CMD_EXAMPLE = Switch(config)# no ip http secure-server
NO_FORM_DOC_CMD_EXAMPLE = You can verify your settings by entering the show ip http server secure status privileged EXEC command.

// (Optional)
// Declare the variable name that one-to-one mapping to each word of command string (COMMAND)
// To get the variable type, please refer to AN1047-ICLI_Command_Generation_Guide.doc Appendix A: Variable Types
// or \vtss_appl\icli\doc\variable_type.txt
// The variable type is declared in \vtss_appl\icli\base\icli_types.h
// CMD_VAR   =

// (Optional)
// Declare the static local sub-function that one-to-one mapping to each word of command string (COMMAND)
// The function is used for runtime callback check on the corresponding word of command string
// RUNTIME   =

// (Optional)
// If there isn't exact matched definition in CCLI variable types (ccli_variable.c/g_variable_name[])
// Given an alternative word that one-to-one mapping to each word of command string (COMMAND)
// BYWORD    =

HELP = ##ICLI_HELP_IP
HELP = ##ICLI_HELP_HTTP
HELP = ##HELP_SECURE_SERVER

// VARIABLE_BEGIN
// VARIABLE_END

CODE_BEGIN
    /* enable global mode */
    (void) VTSS_HTTPS_ICLI_global_mode_set(session_id, TRUE);
CODE_END

// (Optional)
// The no form of this command
NO_FORM_CODE_BEGIN
    /* disable global mode */
    (void) VTSS_HTTPS_ICLI_global_mode_set(session_id, FALSE);
NO_FORM_CODE_END
CMD_END

CMD_BEGIN
COMMAND         = ip http secure-redirect
# /* ---------------------------------------------------------------------------
DOC_CMD_DESC    = Use the http secure-redirect global configuration command to \
                  enable the secure HTTP web redirection. \
                  When the secure HTTP web server is enabled, the feature \
                  automatic redirect the none secure HTTP web connection to \
                  the secure HTTP web connection. \
                  Use the no form of this command to disable the secure HTTP \
                  web redirection.
DOC_CMD_DEFAULT = The secure HTTP web redirection is disabled.
DOC_CMD_USAGE   = Enable secure HTTP web redirection.
DOC_CMD_EXAMPLE = This example shows how to enable the secure HTTP web redirection:
DOC_CMD_EXAMPLE = Switch(config)# ip http secure-redirect
DOC_CMD_EXAMPLE = You can verify your settings by entering the show ip http server secure status privileged EXEC command.
# ----------------------------------------------------------------------------*/

FUNC_NAME = icli_https_redirect
PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE  = ICLI_CMD_MODE_GLOBAL_CONFIG

// (Optional)
// C variable for the variable in the mode entry command
// It is needed when CMD_MODE: ICLI_CMD_MODE_CONFIG_VLAN,
//                             ICLI_CMD_MODE_INTERFACE_PORT_LIST,
//                             ICLI_CMD_MODE_INTERFACE_VLAN
// MODE_VAR  =

// (Optional)
// Name of reused execution function of another command
// FUNC_REUSE =

// (Optional)
// Property of the command, ICLI_CMD_PROP_XXXX, defined in icli_types.h.
// Acceptable use | to combine them.
// PROPERTY  =

// (Optional)
// This is for #if conditional flag to enclose the command.
// IF_FLAG   =

// (Optional)
// The no form of this command
// The C code need enclosed by [NO_FORM_CODE_BEGIN, NO_FORM_CODE_END]
NO_FORM_DOC_CMD_DESC    = Use the no ip http secure-server global configuration command to \
                          disable the secure HTTP web redirection.
NO_FORM_DOC_CMD_DEFAULT = The secure HTTP web redirection is disabled.
NO_FORM_DOC_CMD_USAGE   = Disable the secure HTTP web redirection.
NO_FORM_DOC_CMD_EXAMPLE = This example shows how to disable secure HTTP web redirection:
NO_FORM_DOC_CMD_EXAMPLE = Switch(config)# no ip http secure-redirect
NO_FORM_DOC_CMD_EXAMPLE = You can verify your settings by entering the show ip http server secure status privileged EXEC command.

// (Optional)
// Declare the variable name that one-to-one mapping to each word of command string (COMMAND)
// To get the variable type, please refer to AN1047-ICLI_Command_Generation_Guide.doc Appendix A: Variable Types
// or \vtss_appl\icli\doc\variable_type.txt
// The variable type is declared in \vtss_appl\icli\base\icli_types.h
// CMD_VAR   =

// (Optional)
// Declare the static local sub-function that one-to-one mapping to each word of command string (COMMAND)
// The function is used for runtime callback check on the corresponding word of command string
// RUNTIME   =

// (Optional)
// If there isn't exact matched definition in CCLI variable types (ccli_variable.c/g_variable_name[])
// Given an alternative word that one-to-one mapping to each word of command string (COMMAND)
// BYWORD    =

HELP = ##ICLI_HELP_IP
HELP = ##ICLI_HELP_HTTP
HELP = ##HELP_SECURE_REDIRECT

// VARIABLE_BEGIN
// VARIABLE_END

CODE_BEGIN
    /* enable global mode */
    (void) VTSS_HTTPS_ICLI_redirect_mode_set(session_id, TRUE);
CODE_END

// (Optional)
// The no form of this command
NO_FORM_CODE_BEGIN
    /* disable global mode */
    (void) VTSS_HTTPS_ICLI_redirect_mode_set(session_id, FALSE);
NO_FORM_CODE_END
CMD_END
